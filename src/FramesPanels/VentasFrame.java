/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FramesPanels;

import db.BaseDatos;
import db.MetodosSQL;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import modelos.Cliente;
import modelos.DetalleVenta;
import modelos.Producto;
import modelos.Venta;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import utils.Helper;
import utils.NumeroALetra;

/**
 *
 * @author ernes
 */
public class VentasFrame extends javax.swing.JPanel {

  DefaultTableModel modeloTablaProd = new DefaultTableModel() {
    // desabilitar edicion tabla
    @Override
    public boolean isCellEditable(int rowIndex, int colIndex) {
      return false;
    }

  };
  DefaultListModel<Producto> modeloListaProd = new DefaultListModel<>();
  public static DefaultComboBoxModel<Cliente> modeloCboCliente = new DefaultComboBoxModel<>();

  /**
   * Creates new form ventas
   */
  public VentasFrame() {
    cargarColumnasTabla();
    cargarModeloCboCli();
    initComponents();
    txtFechaActual.setEnabled(false);
    txtFechaActual.setText(fechaactual());
    obtenerNuevoNumeroFactura();
    setListenerModeloTabla();
  }

  public static void cargarModeloCboCli() {
    modeloCboCliente.removeAllElements();
    ArrayList<Cliente> clientes = MetodosSQL.obtenerClientes();
    for (Cliente cliente : clientes) {
      modeloCboCliente.addElement(cliente);
    }
  }

  public static String fechaactual() {
    java.util.Date fecha = new java.util.Date();
    SimpleDateFormat formatofecha = new SimpleDateFormat("dd-MM-yyyy");
    return formatofecha.format(fecha);

  }

  private void cargarColumnasTabla() {
    modeloTablaProd.addColumn("Codigo");
    modeloTablaProd.addColumn("Nombre");
    modeloTablaProd.addColumn("Precio Venta");
    modeloTablaProd.addColumn("Cantidad");
    modeloTablaProd.addColumn("Importe");
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    tabla = new javax.swing.JTable();
    jLabel1 = new javax.swing.JLabel();
    txtBuscarProd = new javax.swing.JTextField();
    jScrollPane2 = new javax.swing.JScrollPane();
    jList1 = new javax.swing.JList();
    btnQuitarProd1 = new javax.swing.JPanel();
    jLabel13 = new javax.swing.JLabel();
    jPanel2 = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    lblTotalVenta = new javax.swing.JLabel();
    btnRealizarVta = new javax.swing.JPanel();
    jLabel12 = new javax.swing.JLabel();
    txtPagaCon = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    lblSub = new javax.swing.JLabel();
    lblSubTotal = new javax.swing.JLabel();
    lblIva = new javax.swing.JLabel();
    lblSubTotal3 = new javax.swing.JLabel();
    btnNuevoCli = new javax.swing.JPanel();
    jLabel14 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jComboBox1 = new javax.swing.JComboBox<>();
    btnCancelarVta2 = new javax.swing.JPanel();
    jLabel15 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    jLabel9 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    txtFechaActual = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    lblNumeroFactura = new javax.swing.JLabel();
    jPanel1 = new javax.swing.JPanel();
    lblCodigoBarra = new javax.swing.JLabel();

    setBackground(new java.awt.Color(47, 34, 23));
    setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

    tabla.setForeground(new java.awt.Color(255, 255, 255));
    tabla.setModel(modeloTablaProd);
    tabla.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        tablaKeyReleased(evt);
      }
    });
    jScrollPane1.setViewportView(tabla);

    add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 730, 290));

    jLabel1.setForeground(java.awt.Color.white);
    jLabel1.setText("Cliente:");
    add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, -1, -1));

    txtBuscarProd.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtBuscarProdKeyReleased(evt);
      }
    });
    add(txtBuscarProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 350, -1));

    jList1.setModel(modeloListaProd);
    jList1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mousePressed(java.awt.event.MouseEvent evt) {
        jList1MousePressed(evt);
      }
    });
    jScrollPane2.setViewportView(jList1);

    add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 350, -1));

    btnQuitarProd1.setBackground(new java.awt.Color(255, 102, 0));
    btnQuitarProd1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnQuitarProd1MouseClicked(evt);
      }
    });
    btnQuitarProd1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    jLabel13.setForeground(new java.awt.Color(255, 255, 255));
    jLabel13.setText("Quitar Producto");
    btnQuitarProd1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 150, -1));

    add(btnQuitarProd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 640, 200, 40));

    jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel2.setFont(new java.awt.Font("Fira Sans Semi-Light", 0, 24)); // NOI18N
    jLabel2.setText("Total Venta");
    jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, -1, -1));

    lblTotalVenta.setFont(new java.awt.Font("Fira Sans Semi-Light", 1, 48)); // NOI18N
    lblTotalVenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTotalVenta.setText("0.0");
    jPanel2.add(lblTotalVenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

    btnRealizarVta.setBackground(new java.awt.Color(255, 102, 0));
    btnRealizarVta.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnRealizarVtaMouseClicked(evt);
      }
    });
    btnRealizarVta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    jLabel12.setForeground(new java.awt.Color(255, 255, 255));
    jLabel12.setText("Realizar Venta");
    btnRealizarVta.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 110, -1));

    jPanel2.add(btnRealizarVta, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 210, 40));
    jPanel2.add(txtPagaCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 210, -1));

    jLabel4.setText("Paga con:");
    jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 115, 20));

    lblSub.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
    lblSub.setText("SubTotal");
    jPanel2.add(lblSub, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

    lblSubTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    lblSubTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblSubTotal.setText("0.0");
    jPanel2.add(lblSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 190, -1));

    lblIva.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    lblIva.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblIva.setText("0.0");
    jPanel2.add(lblIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 200, -1));

    lblSubTotal3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
    lblSubTotal3.setText("IVA (21%)");
    jPanel2.add(lblSubTotal3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

    add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 310, 320, 340));

    btnNuevoCli.setBackground(new java.awt.Color(255, 102, 0));
    btnNuevoCli.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnNuevoCliMouseClicked(evt);
      }
    });
    btnNuevoCli.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    jLabel14.setForeground(new java.awt.Color(255, 255, 255));
    jLabel14.setText("Nuevo");
    btnNuevoCli.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 60, -1));

    add(btnNuevoCli, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 110, 90, 40));

    jLabel3.setForeground(java.awt.Color.white);
    jLabel3.setText("Buscar Producto:");
    add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, -1, -1));

    jComboBox1.setModel(modeloCboCliente);
    add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 310, -1));

    btnCancelarVta2.setBackground(new java.awt.Color(255, 102, 0));
    btnCancelarVta2.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnCancelarVta2MouseClicked(evt);
      }
    });
    btnCancelarVta2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    jLabel15.setForeground(new java.awt.Color(255, 255, 255));
    jLabel15.setText("Cancelar Venta");
    btnCancelarVta2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 150, -1));

    add(btnCancelarVta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 640, 200, 40));

    jPanel3.setBackground(new java.awt.Color(255, 102, 0));
    jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon/add_shopping_cart_white_48dp.png"))); // NOI18N
    jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

    add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 740));

    jLabel5.setForeground(new java.awt.Color(255, 255, 255));
    jLabel5.setText("Fecha:");
    add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, -1, -1));
    add(txtFechaActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, 310, -1));

    jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(255, 255, 255));
    jLabel6.setText("Factura Nro:");
    add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 20, -1, -1));

    lblNumeroFactura.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    lblNumeroFactura.setForeground(new java.awt.Color(255, 255, 255));
    lblNumeroFactura.setText("jLabel7");
    add(lblNumeroFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 50, 320, -1));

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(lblCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addGap(0, 0, Short.MAX_VALUE)
        .addComponent(lblCodigoBarra, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 210, 160, 80));
  }// </editor-fold>//GEN-END:initComponents

    private void btnRealizarVtaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRealizarVtaMouseClicked
//        obtener total venta y fecha actual
    if (modeloTablaProd.getRowCount() > 0) {
      double totalNeto = Double.parseDouble(Helper.convertirComaAPunto(lblTotalVenta.getText()));
      double totalBruto = Double.parseDouble(Helper.convertirComaAPunto(lblSubTotal.getText()));
      double iva = Double.parseDouble(Helper.convertirComaAPunto(lblSubTotal.getText()));
      Date fecha = obtenerFechaActual();
      Cliente cliente = (Cliente) modeloCboCliente.getSelectedItem();
      String dni = cliente.getDni();

      String pagaCon = txtPagaCon.getText();
      double cambio = 0;
      if (!pagaCon.isEmpty()) {
        cambio = Double.parseDouble(pagaCon) - totalNeto;
      }

//        insertar en la bd nueva venta
      Venta venta = new Venta(lblNumeroFactura.getText(), fecha, totalNeto, totalBruto, 21, cliente.getDni());
      MetodosSQL.insertarVenta(venta);
//        insertar detalle venta
      int numRows = modeloTablaProd.getRowCount();
      for (int i = 0; i < numRows; i++) {
        String codigoProd = (String) modeloTablaProd.getValueAt(i, 0);
        String strCantidad = (String) modeloTablaProd.getValueAt(i, 3);
        Double precio = Double.parseDouble((String) modeloTablaProd.getValueAt(i, 2));
        int cantidad = Integer.parseInt(strCantidad);
        int numDetalle = i + 1;
        DetalleVenta detalleVenta = new DetalleVenta(
          numDetalle, lblNumeroFactura.getText(), codigoProd, cantidad, precio
        );
        MetodosSQL.insertarDetalleVenta(detalleVenta);
        MetodosSQL.actualizarStockProducto(codigoProd, Integer.parseInt(strCantidad));
      }
      JOptionPane.showMessageDialog(this, "Venta generada con exito!");

      if (!pagaCon.isEmpty()) {
        JOptionPane.showMessageDialog(this, String.valueOf(cambio), "Cambio:", JOptionPane.OK_OPTION);
      }
      String total = lblTotalVenta.getText().trim();
      String literal = new NumeroALetra().Convertir(total, true);
      verFactura(
        lblNumeroFactura.getText(),
        literal,
        lblSubTotal.getText(),
        lblIva.getText(),
        total);
      eliminarFilasTabla();
      restablecerLabelsVenta();
      limpiarCampos();
      limpiarListaProductos();
      obtenerNuevoNumeroFactura();
      Home.INVENTARIO.cargarModeloTabla(null);
    } else {
      JOptionPane.showMessageDialog(this, "Debe ingresar productos en la venta", "Error!", JOptionPane.ERROR_MESSAGE);
    }
    txtBuscarProd.requestFocus();
    }//GEN-LAST:event_btnRealizarVtaMouseClicked

  public void verFactura(String NumFactura, String Total, String subTotal, String iva, String SumaTotal) {
    JasperReport reporte;
    JasperPrint reporte_view;
    try {
      //direccion del archivo JASPER
      String ruta = "src\\reportes\\Factura.jasper";
      reporte = (JasperReport) JRLoader.loadObjectFromFile(ruta);
      //Se crea un objeto HashMap
      Map parametros = new HashMap();
      parametros.clear();
      //parametros de entrada
      parametros.put("NumFactura", NumFactura);
      parametros.put("NumLiteral", Total);
      parametros.put("IVA", iva);
      parametros.put("SubTotal", subTotal);
      parametros.put("SumaTotal", SumaTotal);
      //-----------------------------------
      reporte_view = JasperFillManager.fillReport(reporte, parametros, BaseDatos.obtenerConexion());
      JasperViewer.viewReport(reporte_view, false);

    } catch (JRException E) {
    }
  }

  private void cargarImagen(Producto p) {
    ImageIcon imagenProd;
    try {
      InputStream is = MetodosSQL.buscarFoto(p);
      BufferedImage bi;
      if (is != null) {

        bi = ImageIO.read(is);
        imagenProd = new ImageIcon(bi);
      } else {
        imagenProd = new ImageIcon(getClass().getResource("/images/no_img.jpg"));
      }

      //Redimensión de imagen para ajustarla al tamaño del JLabel.
      Image imgProd = imagenProd.getImage();
      //Se crea un nuevo objeto Image con la imagen redimensionada.
      Image imgRedimensionada = imgProd.getScaledInstance(250, 150, Image.SCALE_DEFAULT);
      //Se crea un nuevo objeto ImageIcon a partir de la imagen redimensionada.
      ImageIcon iconRedimensionado = new ImageIcon(imgRedimensionada);

      //Establecemos la imagen redimensionada, como icono de la etiqueta de imagen.
//      lblImagenProd.setIcon(iconRedimensionado);
    } catch (IOException e) {
    }

  }
    private void txtBuscarProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProdKeyReleased
    String cadenaBusqueda = txtBuscarProd.getText().toLowerCase();
    if (cadenaBusqueda.isEmpty()) {
      limpiarListaProductos();
    } else {
      ArrayList<Producto> productos = MetodosSQL.obtenerProductosPorCriterio(cadenaBusqueda);
      int numeroProductos = productos.size();
      limpiarListaProductos();

      for (Producto producto : productos) {
        modeloListaProd.addElement(producto);
      }
    }

    }//GEN-LAST:event_txtBuscarProdKeyReleased

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
    JList jlist = (JList) evt.getSource();
    // verificar si es doble click
    if (evt.getClickCount() == 2) {
      // obtener indice seleccionado
      int indice = jlist.locationToIndex(evt.getPoint());
      // obtener producto seleccionado
      Producto producto = (Producto) jlist.getSelectedValue();
      agregarProductoAVenta(producto);
      Helper.cargarCodigoBarra(producto.getCodigo(), lblCodigoBarra);
      limpiarListaProductos();
      limpiarCampos();
    }
    }//GEN-LAST:event_jList1MousePressed

    private void tablaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaKeyReleased
    if (evt.getKeyCode() == KeyEvent.VK_ADD) {
      int filaSeleccionada = tabla.getSelectedRow();
      String cantidad = JOptionPane.showInputDialog("Ingrese nueva cantidad: ");
      if ((cantidad.equals("")) || (cantidad.equals("0"))) {
        JOptionPane.showMessageDialog(this, "Debe ingresar una cantidad mayor que 0");
      } else {

        int cantidadDeseada = Integer.parseInt(cantidad);
        int stockActual = obtenerStockActual((String) modeloTablaProd.getValueAt(filaSeleccionada, 0));
        if (cantidadDeseada > stockActual) {
          JOptionPane.showMessageDialog(this, "Ud. no cuenta con el stock apropiado");
        } else {
          String precioVenta = (String) modeloTablaProd.getValueAt(filaSeleccionada, 2);
//            calcular nuevo importe
          double importe = Double.parseDouble(cantidad) * Double.parseDouble(precioVenta);
          String importeStr = String.valueOf(importe);
//            actualizar la tabla
          modeloTablaProd.setValueAt(cantidad, filaSeleccionada, 3);
          modeloTablaProd.setValueAt(importeStr, filaSeleccionada, 4);
        }
      }
    }
    }//GEN-LAST:event_tablaKeyReleased

    private void btnQuitarProd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnQuitarProd1MouseClicked
    int filaSeleccionada = tabla.getSelectedRow();
    int nroFilas = modeloTablaProd.getRowCount();
    if (nroFilas > 0) {
      int opcion = JOptionPane.showConfirmDialog(this, "Seguro de borrar el producto?");
      if (opcion == 0) {
        modeloTablaProd.removeRow(filaSeleccionada);
        limpiarCampos();
        limpiarListaProductos();
      }
    }

    }//GEN-LAST:event_btnQuitarProd1MouseClicked

    private void btnNuevoCliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoCliMouseClicked
    Home.mostrarPanel(Home.CLIENTES_FRAME);

    }//GEN-LAST:event_btnNuevoCliMouseClicked

    private void btnCancelarVta2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarVta2MouseClicked
    int nroFilas = modeloTablaProd.getRowCount();
    if (nroFilas > 0) {
      int opcion = JOptionPane.showConfirmDialog(this, "Seguro de cancelar la venta");
      if (opcion == 0) {
        eliminarFilasTabla();
        limpiarListaProductos();
        limpiarCampos();
      }
    }
    restablecerLabelsVenta();
    }//GEN-LAST:event_btnCancelarVta2MouseClicked

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel btnCancelarVta2;
  private javax.swing.JPanel btnNuevoCli;
  private javax.swing.JPanel btnQuitarProd1;
  private javax.swing.JPanel btnRealizarVta;
  private javax.swing.JComboBox<Cliente> jComboBox1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JList jList1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JLabel lblCodigoBarra;
  private javax.swing.JLabel lblIva;
  private javax.swing.JLabel lblNumeroFactura;
  private javax.swing.JLabel lblSub;
  private javax.swing.JLabel lblSubTotal;
  private javax.swing.JLabel lblSubTotal3;
  private javax.swing.JLabel lblTotalVenta;
  private javax.swing.JTable tabla;
  private javax.swing.JTextField txtBuscarProd;
  private javax.swing.JTextField txtFechaActual;
  private javax.swing.JTextField txtPagaCon;
  // End of variables declaration//GEN-END:variables

  private void limpiarListaProductos() {
    modeloListaProd.clear();
  }

  private void agregarProductoAVenta(Producto producto) {
    String cantidad = JOptionPane.showInputDialog("Ingrese cantidad: ", 1);
    if ((cantidad.equals("")) || (cantidad.equals("0"))) {
      JOptionPane.showMessageDialog(this, "Debe ingresar una cantidad mayor que 0");
    } else {
      int cantidadDeseada = Integer.parseInt(cantidad);
      int stockActual = obtenerStockActual(producto.getCodigo());
      if (cantidadDeseada > stockActual) {
        JOptionPane.showMessageDialog(this, "No hay stock disponible");
        txtBuscarProd.requestFocus();
      } else {
        String[] dataProducto = {
          producto.getCodigo(),
          producto.getNombre(),
          String.valueOf(producto.getPrecioVenta()),
          cantidad,
          String.valueOf(producto.getPrecioVenta() * cantidadDeseada)
        };
        modeloTablaProd.addRow(dataProducto);
      }
    }
  }

  private void setListenerModeloTabla() {
    modeloTablaProd.addTableModelListener(new TableModelListener() {

      @Override
      public void tableChanged(TableModelEvent tme) {
        int nroFilas = modeloTablaProd.getRowCount();
        double subTotal = 0;
        for (int i = 0; i < nroFilas; i++) {
          String importe = (String) modeloTablaProd.getValueAt(i, 4);
          subTotal += Double.parseDouble(importe);
        }
        double iva = subTotal * 0.21;
        double total = subTotal + iva;
        lblIva.setText(String.format("%10.2f", iva));
        lblSubTotal.setText(String.format("%10.2f", subTotal));
        lblTotalVenta.setText(String.format("%10.2f", total));
      }
    });
  }

  private Date obtenerFechaActual() {
    Calendar calendar = Calendar.getInstance();
    java.util.Date fechaActual = calendar.getTime();
    long fechaMilisegundos = fechaActual.getTime();
    return new Date(fechaMilisegundos);
  }

  private void eliminarFilasTabla() {
    for (int i = modeloTablaProd.getRowCount() - 1; i >= 0; i--) {
      modeloTablaProd.removeRow(i);
    }
  }

  private void limpiarCampos() {
    txtBuscarProd.setText("");
    txtPagaCon.setText("");
//    lblImagenProd.setIcon(null);
    txtBuscarProd.requestFocus();
  }

  private void obtenerNuevoNumeroFactura() {
    lblNumeroFactura.setText(MetodosSQL.numeroFactura());
  }

  private void restablecerLabelsVenta() {
    lblSubTotal.setText("0.0");
    lblIva.setText("0.0");
    lblTotalVenta.setText("0.0");
  }

  private int obtenerStockActual(String codigo) {
    Producto p = MetodosSQL.obtenerProductoPorCodigo(codigo);
    return p.getStock();
  }

}
