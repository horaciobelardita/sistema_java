/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FramesPanels;

import db.MetodosSQL;
import java.awt.Color;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import modelos.Cliente;
import utils.Helper;
import utils.Paginador;

/**
 *
 * @author ernes
 */
public class ClientesFrame extends javax.swing.JPanel {

  /**
   * Creates new form clientes
   */
  private DefaultTableModel modeloTablaClientes = null;

  private int registrosXPag = 6;
  private Paginador<Cliente> paginador;
  private List<Cliente> listaClientes;
  private final SpinnerNumberModel modeloSpinner;
  private int numPagina;
  private Cliente clienteSeleccionado = null;
  private String accion;

  public ClientesFrame() {
    modeloSpinner = new SpinnerNumberModel(registrosXPag, 1, 100, 1);
    configurarTabla();
    initComponents();
    numPagina = 1;
    restablecer();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel9 = new javax.swing.JLabel();
    jPanel2 = new javax.swing.JPanel();
    txtNombreCli = new javax.swing.JTextField();
    lblTelefono = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    lblDNI = new javax.swing.JLabel();
    txtApellidoCli = new javax.swing.JTextField();
    lblDireccion = new javax.swing.JLabel();
    txtTelCli = new javax.swing.JTextField();
    txtDirCli = new javax.swing.JTextField();
    cboCatIva = new javax.swing.JComboBox<>();
    lblApellido = new javax.swing.JLabel();
    txtDniCli = new javax.swing.JTextField();
    lblNombreCli = new javax.swing.JLabel();
    btnCancelar = new javax.swing.JPanel();
    btn_regis2 = new javax.swing.JPanel();
    jLabel11 = new javax.swing.JLabel();
    btnGuardarCliente = new javax.swing.JPanel();
    jLabel12 = new javax.swing.JLabel();
    btn_regis4 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTableClientes = new javax.swing.JTable();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    txtBuscarCliente = new javax.swing.JTextField();
    lblPaginacion = new javax.swing.JLabel();
    btnPrimerPag = new javax.swing.JButton();
    btnPagAnterior = new javax.swing.JButton();
    btnPagSig = new javax.swing.JButton();
    btnPagUlt = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    spinnerPaginacion = new javax.swing.JSpinner();

    setBackground(new java.awt.Color(47, 34, 23));
    setPreferredSize(new java.awt.Dimension(1050, 575));
    setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jPanel1.setBackground(new java.awt.Color(255, 102, 0));
    jPanel1.setPreferredSize(new java.awt.Dimension(228, 575));
    jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clientes.png"))); // NOI18N
    jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, -1, -1));

    add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 130, 740));

    jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

    txtNombreCli.setBackground(new java.awt.Color(47, 34, 23));
    txtNombreCli.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
    txtNombreCli.setForeground(new java.awt.Color(255, 255, 255));
    txtNombreCli.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtNombreCliKeyReleased(evt);
      }
      public void keyTyped(java.awt.event.KeyEvent evt) {
        txtNombreCliKeyTyped(evt);
      }
    });

    lblTelefono.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    lblTelefono.setForeground(new java.awt.Color(255, 255, 255));
    lblTelefono.setText("Teléfono");

    jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    jLabel8.setForeground(new java.awt.Color(255, 255, 255));
    jLabel8.setText("Condición IVA");

    lblDNI.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    lblDNI.setForeground(new java.awt.Color(255, 255, 255));
    lblDNI.setText("DNI");

    txtApellidoCli.setBackground(new java.awt.Color(47, 34, 23));
    txtApellidoCli.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
    txtApellidoCli.setForeground(new java.awt.Color(255, 255, 255));
    txtApellidoCli.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtApellidoCliActionPerformed(evt);
      }
    });
    txtApellidoCli.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtApellidoCliKeyReleased(evt);
      }
      public void keyTyped(java.awt.event.KeyEvent evt) {
        txtApellidoCliKeyTyped(evt);
      }
    });

    lblDireccion.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    lblDireccion.setForeground(new java.awt.Color(255, 255, 255));
    lblDireccion.setText("Direccion");

    txtTelCli.setBackground(new java.awt.Color(47, 34, 23));
    txtTelCli.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
    txtTelCli.setForeground(new java.awt.Color(255, 255, 255));
    txtTelCli.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        txtTelCliKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtTelCliKeyReleased(evt);
      }
      public void keyTyped(java.awt.event.KeyEvent evt) {
        txtTelCliKeyTyped(evt);
      }
    });

    txtDirCli.setBackground(new java.awt.Color(47, 34, 23));
    txtDirCli.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
    txtDirCli.setForeground(new java.awt.Color(255, 255, 255));
    txtDirCli.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtDirCliKeyReleased(evt);
      }
    });

    cboCatIva.setForeground(new java.awt.Color(255, 255, 255));
    cboCatIva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consumidor final", "Exento", "Exterior", "Monotributista", "Responsable inscripto" }));

    lblApellido.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    lblApellido.setForeground(new java.awt.Color(255, 255, 255));
    lblApellido.setText("Apellidos");

    txtDniCli.setBackground(new java.awt.Color(47, 34, 23));
    txtDniCli.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
    txtDniCli.setForeground(new java.awt.Color(255, 255, 255));
    txtDniCli.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtDniCliActionPerformed(evt);
      }
    });
    txtDniCli.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        txtDniCliKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtDniCliKeyReleased(evt);
      }
      public void keyTyped(java.awt.event.KeyEvent evt) {
        txtDniCliKeyTyped(evt);
      }
    });

    lblNombreCli.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    lblNombreCli.setForeground(new java.awt.Color(255, 255, 255));
    lblNombreCli.setText("Nombre");

    btnCancelar.setBackground(new java.awt.Color(255, 102, 0));
    btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnCancelarMouseClicked(evt);
      }
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        btnCancelarMouseEntered(evt);
      }
    });
    btnCancelar.setLayout(new java.awt.GridBagLayout());

    btn_regis2.setBackground(new java.awt.Color(255, 102, 0));
    btn_regis2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    btn_regis2.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btn_regis2MouseClicked(evt);
      }
    });
    btn_regis2.setLayout(new java.awt.GridBagLayout());
    btnCancelar.add(btn_regis2, new java.awt.GridBagConstraints());

    jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    jLabel11.setForeground(new java.awt.Color(255, 255, 255));
    jLabel11.setText("Cancelar");
    btnCancelar.add(jLabel11, new java.awt.GridBagConstraints());

    btnGuardarCliente.setBackground(new java.awt.Color(255, 102, 0));
    btnGuardarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    btnGuardarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btnGuardarClienteMouseClicked(evt);
      }
    });
    btnGuardarCliente.setLayout(new java.awt.GridBagLayout());

    jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
    jLabel12.setForeground(new java.awt.Color(255, 255, 255));
    jLabel12.setText("Guardar");
    btnGuardarCliente.add(jLabel12, new java.awt.GridBagConstraints());

    btn_regis4.setBackground(new java.awt.Color(255, 102, 0));
    btn_regis4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    btn_regis4.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        btn_regis4MouseClicked(evt);
      }
    });
    btn_regis4.setLayout(new java.awt.GridBagLayout());
    btnGuardarCliente.add(btn_regis4, new java.awt.GridBagConstraints());

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(53, 53, 53)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(lblDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(txtDniCli, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblNombreCli, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(txtNombreCli, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(txtApellidoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblTelefono)
              .addComponent(txtTelCli, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(lblDireccion)
              .addComponent(txtDirCli, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel8)
              .addComponent(cboCatIva, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(79, 79, 79)
            .addComponent(btnGuardarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(25, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(lblDNI)
        .addGap(11, 11, 11)
        .addComponent(txtDniCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(5, 5, 5)
        .addComponent(lblNombreCli)
        .addGap(11, 11, 11)
        .addComponent(txtNombreCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(15, 15, 15)
        .addComponent(lblApellido)
        .addGap(11, 11, 11)
        .addComponent(txtApellidoCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(15, 15, 15)
        .addComponent(lblTelefono)
        .addGap(21, 21, 21)
        .addComponent(txtTelCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(5, 5, 5)
        .addComponent(lblDireccion)
        .addGap(11, 11, 11)
        .addComponent(txtDirCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(5, 5, 5)
        .addComponent(jLabel8)
        .addGap(1, 1, 1)
        .addComponent(cboCatIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(35, 35, 35)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnGuardarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 340, 500));

    jLabel1.setForeground(new java.awt.Color(255, 255, 255));
    jLabel1.setText("Registro de Clientes");
    add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, -1));

    jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

    jTableClientes.getSelectionModel().addListSelectionListener(
      new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent event) {
          if (!event.getValueIsAdjusting() && (jTableClientes.getSelectedRow()>= 0)) {//This line prevents double events
            int filaSeleccionada = jTableClientes.getSelectedRow();
            Cliente cliente = (Cliente)modeloTablaClientes.getValueAt(filaSeleccionada, 1);
            txtDniCli.setText(cliente.getDni());
            txtNombreCli.setText(cliente.getNombre());
            txtApellidoCli.setText(cliente.getApellido());
            txtTelCli.setText(cliente.getTelefono());
            txtDirCli.setText(cliente.getDireccion());
            seleccionarCondicionIva(cliente.getCategoriaIva());
            clienteSeleccionado = cliente;
            accion = "actualizar";
          }
        }
      }
    );
    jScrollPane1.setViewportView(jTableClientes);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 736, Short.MAX_VALUE)
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
    );

    add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 740, 500));

    jLabel2.setForeground(new java.awt.Color(255, 255, 255));
    jLabel2.setText("Listado de Clientes");
    add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, -1, -1));

    jLabel3.setForeground(new java.awt.Color(255, 255, 255));
    jLabel3.setText("Buscar:");
    add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, -1, -1));
    add(txtBuscarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 740, -1));

    lblPaginacion.setForeground(new java.awt.Color(255, 255, 255));
    lblPaginacion.setText("paginacion");
    add(lblPaginacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 650, -1, -1));

    btnPrimerPag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon/baseline_first_page_white_24dp.png"))); // NOI18N
    btnPrimerPag.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPrimerPagActionPerformed(evt);
      }
    });
    add(btnPrimerPag, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 670, -1, -1));

    btnPagAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon/baseline_chevron_left_white_24dp.png"))); // NOI18N
    btnPagAnterior.setToolTipText("");
    btnPagAnterior.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPagAnteriorActionPerformed(evt);
      }
    });
    add(btnPagAnterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 670, -1, -1));

    btnPagSig.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon/baseline_chevron_right_white_24dp.png"))); // NOI18N
    btnPagSig.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPagSigActionPerformed(evt);
      }
    });
    add(btnPagSig, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 670, -1, -1));

    btnPagUlt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon/baseline_last_page_white_24dp.png"))); // NOI18N
    btnPagUlt.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPagUltActionPerformed(evt);
      }
    });
    add(btnPagUlt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 670, -1, -1));

    jLabel4.setForeground(new java.awt.Color(255, 255, 255));
    jLabel4.setText("Registros por página:");
    add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 650, -1, -1));

    spinnerPaginacion.setModel(modeloSpinner);
    spinnerPaginacion.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        spinnerPaginacionStateChanged(evt);
      }
    });
    add(spinnerPaginacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 680, 70, -1));
  }// </editor-fold>//GEN-END:initComponents

    private void txtApellidoCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoCliActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoCliActionPerformed

    private void btn_regis2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regis2MouseClicked
    // TODO add your handling code here:
    }//GEN-LAST:event_btn_regis2MouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
    restablecer();
    Home.mostrarPanel(Home.VENTAS_FRAME);
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void btnCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseEntered
    // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarMouseEntered

    private void btn_regis4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regis4MouseClicked
    // TODO add your handling code here:
    }//GEN-LAST:event_btn_regis4MouseClicked

    private void btnGuardarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarClienteMouseClicked
    if (Helper.esCampoVacio(txtDniCli)) {
      Helper.mostrarError(txtDniCli, lblDNI, "Debe ingresar DNI", Color.red);
      return;
    }
    if (Helper.esCampoVacio(txtNombreCli)) {
      Helper.mostrarError(txtNombreCli, lblNombreCli, "Debe ingresar Nombre", Color.red);
      return;
    }
    if (Helper.esCampoVacio(txtApellidoCli)) {
      Helper.mostrarError(txtApellidoCli, lblApellido, "Debe ingresar Apellido", Color.red);
      return;
    }

    // obtener clientes y filtrar si ya hay un dni registrado
    List<Cliente> listaDni = MetodosSQL.obtenerClientes()
      .stream().filter(c -> c.getDni().equals(txtDniCli.getText()))
      .collect(Collectors.toList());
    Cliente cliente = new Cliente();
    cliente.setDni(txtDniCli.getText());
    cliente.setNombre(txtNombreCli.getText());
    cliente.setApellido(txtApellidoCli.getText());
    cliente.setTelefono(txtTelCli.getText());
    cliente.setDireccion(txtDirCli.getText());
    cliente.setCategoriaIva((String) cboCatIva.getSelectedItem());
    switch (accion) {
      case "nuevo":
        if (listaDni.isEmpty()) {

          int resultado = MetodosSQL.guardarCliente(cliente);
          if (resultado > 0) {
            JOptionPane.showMessageDialog(this, "Cliente Guardado con exito!");
            restablecer();
            Home.VENTAS_FRAME.cargarModeloCboCli();
            // Home.mostrarPanel(Home.VENTAS_FRAME);
          } else {
            JOptionPane.showMessageDialog(this, "Ocurrio un error intentelo nuevamente");
            txtDniCli.requestFocus();
          }
        } else {
          Helper.mostrarError(txtDniCli, lblDNI, "El DNI ya esta registrado", Color.red);
        }
        break;
      case "actualizar":

        if (!listaDni.isEmpty()) {
          if (listaDni.get(0).getDni().equals(clienteSeleccionado.getDni())) {
            int resultado = MetodosSQL.actualizarCliente(cliente);
            if (resultado > 0) {
              JOptionPane.showMessageDialog(this, "Cliente actualizado con exito!");
              restablecer();
            } else {
              JOptionPane.showMessageDialog(this, "Ocurrio un error intentelo nuevamente");
            }
          } else {
            Helper.mostrarError(txtDniCli, lblDNI, "El DNI no esta registrado", Color.red);
          }
        }
        break;
    }

    }//GEN-LAST:event_btnGuardarClienteMouseClicked

    private void txtNombreCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreCliKeyReleased
    if (Helper.esCampoVacio(txtNombreCli)) {
      lblNombreCli.setForeground(Color.white);
    } else {
      lblNombreCli.setText("Nombre:");
      lblNombreCli.setForeground(new Color(255, 102, 0));
    }
    }//GEN-LAST:event_txtNombreCliKeyReleased

    private void txtDniCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniCliKeyReleased
    if (Helper.esCampoVacio(txtDniCli)) {
      lblDNI.setForeground(Color.white);
    } else {
      lblDNI.setText("DNI:");
      lblDNI.setForeground(new Color(255, 102, 0));
    }
    }//GEN-LAST:event_txtDniCliKeyReleased

    private void txtDniCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniCliActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_txtDniCliActionPerformed

    private void txtTelCliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelCliKeyPressed
    }//GEN-LAST:event_txtTelCliKeyPressed

    private void txtDniCliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniCliKeyPressed
    }//GEN-LAST:event_txtDniCliKeyPressed

    private void txtApellidoCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoCliKeyReleased
    if (Helper.esCampoVacio(txtApellidoCli)) {
      lblApellido.setForeground(Color.white);
    } else {
      lblApellido.setText("Apellidos:");
      lblApellido.setForeground(new Color(255, 102, 0));
    }
    }//GEN-LAST:event_txtApellidoCliKeyReleased

    private void txtTelCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelCliKeyReleased
    if (txtTelCli.getText().isEmpty()) {
      lblTelefono.setForeground(Color.white);
    } else {
      lblTelefono.setForeground(new Color(255, 102, 0));
    }
    }//GEN-LAST:event_txtTelCliKeyReleased

    private void txtDirCliKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDirCliKeyReleased
    if (txtDirCli.getText().isEmpty()) {
      lblDireccion.setForeground(Color.white);
    } else {
      lblDireccion.setForeground(new Color(255, 102, 0));
    }
    }//GEN-LAST:event_txtDirCliKeyReleased

  private void btnPrimerPagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimerPagActionPerformed
    paginacion("primero");
  }//GEN-LAST:event_btnPrimerPagActionPerformed

  private void btnPagAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagAnteriorActionPerformed
    paginacion("anterior");
  }//GEN-LAST:event_btnPagAnteriorActionPerformed

  private void btnPagSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagSigActionPerformed
    paginacion("siguiente");
  }//GEN-LAST:event_btnPagSigActionPerformed

  private void btnPagUltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagUltActionPerformed
    paginacion("ultimo");
  }//GEN-LAST:event_btnPagUltActionPerformed

  private void spinnerPaginacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerPaginacionStateChanged
    numPagina = 1;
    Number valorSpinner = (Number) spinnerPaginacion.getValue();
    registrosXPag = valorSpinner.intValue();
    listaClientes = MetodosSQL.obtenerClientes();
    if (!listaClientes.isEmpty()) {
      paginador = new Paginador<>(listaClientes, lblPaginacion, registrosXPag);
      listaClientes = obtenerClientes(null);

      cargarClientesEnTabla(listaClientes);
    }
  }//GEN-LAST:event_spinnerPaginacionStateChanged

  private void txtDniCliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniCliKeyTyped
    Helper.validarCampoDni(evt, txtDniCli);
  }//GEN-LAST:event_txtDniCliKeyTyped

  private void txtNombreCliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreCliKeyTyped
    Helper.validarAlphanumerico(evt);
  }//GEN-LAST:event_txtNombreCliKeyTyped

  private void txtApellidoCliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoCliKeyTyped
    Helper.validarAlphanumerico(evt);
  }//GEN-LAST:event_txtApellidoCliKeyTyped

  private void txtTelCliKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelCliKeyTyped
    Helper.validarSoloNumero(evt);
  }//GEN-LAST:event_txtTelCliKeyTyped

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel btnCancelar;
  private javax.swing.JPanel btnGuardarCliente;
  private javax.swing.JButton btnPagAnterior;
  private javax.swing.JButton btnPagSig;
  private javax.swing.JButton btnPagUlt;
  private javax.swing.JButton btnPrimerPag;
  private javax.swing.JPanel btn_regis2;
  private javax.swing.JPanel btn_regis4;
  private javax.swing.JComboBox<String> cboCatIva;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTableClientes;
  private javax.swing.JLabel lblApellido;
  private javax.swing.JLabel lblDNI;
  private javax.swing.JLabel lblDireccion;
  private javax.swing.JLabel lblNombreCli;
  public javax.swing.JLabel lblPaginacion;
  private javax.swing.JLabel lblTelefono;
  private javax.swing.JSpinner spinnerPaginacion;
  private javax.swing.JTextField txtApellidoCli;
  private javax.swing.JTextField txtBuscarCliente;
  private javax.swing.JTextField txtDirCli;
  private javax.swing.JTextField txtDniCli;
  private javax.swing.JTextField txtNombreCli;
  private javax.swing.JTextField txtTelCli;
  // End of variables declaration//GEN-END:variables

  private void restablecer() {
    accion = "nuevo";
    restablecerLabel(lblDNI, "DNI:");
    restablecerLabel(lblNombreCli, "Nombre:");
    restablecerLabel(lblApellido, "Apellidos:");
    restablecerLabel(lblDireccion, "Direccion");
    restablecerLabel(lblTelefono, "Telefono");
    txtDniCli.setText("");
    txtNombreCli.setText("");
    txtApellidoCli.setText("");
    txtTelCli.setText("");
    txtDirCli.setText("");
    txtDniCli.requestFocus();
    registrosXPag = 10;
    listaClientes = MetodosSQL.obtenerClientes();
    if (!listaClientes.isEmpty()) {
      paginador = new Paginador<>(listaClientes, lblPaginacion, registrosXPag);
    }
    listaClientes = obtenerClientes(null);

    cargarClientesEnTabla(listaClientes);

  }

  public void paginacion(String accion) {

    switch (accion) {
      case "primero":
        if (!listaClientes.isEmpty()) {
          numPagina = paginador.primero();
        }
        break;
      case "siguiente":
        if (!listaClientes.isEmpty()) {
          numPagina = paginador.siguiente();
        }
        break;
      case "anterior":
        if (!listaClientes.isEmpty()) {
          numPagina = paginador.anterior();
        }
        break;
      case "ultimo":
        if (!listaClientes.isEmpty()) {
          numPagina = paginador.ultimo();
        }
        break;
    }
    listaClientes = obtenerClientes(null);
    cargarClientesEnTabla(listaClientes);
  }

  private void restablecerLabel(JLabel label, String texto) {
    label.setText(texto);
    label.setForeground(Color.white);
  }

  private void seleccionarCondicionIva(String condicion) {
    for (int i = 0; i < cboCatIva.getItemCount(); i++) {
      String itemCombo = cboCatIva.getItemAt(i);
      if (condicion.equals(itemCombo)) {
        cboCatIva.setSelectedIndex(i);
        break;
      }
    }

  }

  private List<Cliente> obtenerClientes(String filtro) {
    List<Cliente> clientes;
    int inicio = (numPagina - 1) * registrosXPag;
    if (filtro == null) {
      clientes = MetodosSQL
        .obtenerClientes()
        .stream()
        .skip(inicio)
        .limit(registrosXPag)
        .collect(Collectors.toList());
    } else {
      clientes = MetodosSQL
        .obtenerClientes()
        .stream()
        .filter(cliente
          -> cliente.getDni().startsWith(filtro)
        || cliente.getApellido().startsWith(filtro)
        || cliente.getNombre().startsWith(filtro))
        .skip(inicio)
        .limit(registrosXPag)
        .collect(Collectors.toList());

    }
    return clientes;
  }

  private void configurarTabla() {
    String[] titulos = {"DNI", "Nombre", "Apellidos", "Telefono", "Direccion"};
    modeloTablaClientes = new DefaultTableModel(null, titulos) {
      @Override
      public boolean isCellEditable(int i, int i1) {
        return false;
      }

    };
  }

  private void cargarClientesEnTabla(List<Cliente> clientes) {

    limpiarTabla();
    if (!clientes.isEmpty()) {
      clientes.forEach(cliente -> {
        Object[] registro = {
          cliente.getDni(),
          cliente,
          cliente.getApellido(),
          cliente.getTelefono(),
          cliente.getDireccion()
        };
        modeloTablaClientes.addRow(registro);
      });

    }
    jTableClientes.setModel(modeloTablaClientes);
    jTableClientes.setRowHeight(30);

  }

  private void limpiarTabla() {
    int numFilas = modeloTablaClientes.getRowCount();
    if (numFilas > 0) {
      for (int i = numFilas - 1; i >= 0; i--) {
        modeloTablaClientes.removeRow(i);
      }
    }
  }

}
